<snippet>
	<content><![CDATA[
struct DisjointSetUnion {
    vector<int> parent, size;

    DisjointSetUnion(int n) {
        parent.assign(n + 1, 0);
        size.assign(n + 1, 0);
        for (int i = 1; i <= n; i++) {
            parent[i] = i;
            size[i] = 1;
        }
    }

    int Find(int a) {
        if (parent[a] == a) return a;
        return parent[a] = Find(parent[a]);
    }

    void Union(int a, int b) {
        a = Find(a);
        b = Find(b);
        if (a != b) {
            if (size[a] < size[b]) swap(a, b);
            parent[b] = a;
            size[a] += size[b];
        }
    }
};

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>dsu</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
